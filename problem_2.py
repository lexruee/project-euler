# -*- coding: utf-8 -*-
"""
Problem from: http://projecteuler.net/

Problem #2: Even Fibonacci numbers:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def  fibonacci(n):
    def fibIter(f_n1, f_n2, n, acc):
        if n == 0:
            return acc
        else:
            f_n = f_n1 + f_n2 
            return fibIter(f_n, f_n1, n - 1, f_n1)
        return fibIter(f0, f1, n, f0 + f1)
    f0, f1 = 1, 2
    return fibIter(f1, f0, n, f0)

def main():
    upperLimit, s, n = 4 * 10 ** 6, 0, 0
    while True:
        fib = fibonacci(n)
        if not fib <= upperLimit:
            break
        if fib % 2 == 0:
            s += fib
        n += 1
        
    print s

if __name__ == '__main__':main()
